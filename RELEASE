PoMiDAQ Release Notes
=====================

1. Set variables

OLD_VERSION="0.5.0"
NEW_VERSION="0.5.1"

2. Write NEWS entries for PoMiDAQ in the same format as usual.

git shortlog v$OLD_VERSION.. | grep -i -v trivial | grep -v Merge > NEWS.new

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Version 0.5.1
~~~~~~~~~~~~~
Released: 2023-xx-xx

Notes:

Features:

Bugfixes:

Miscellaneous:

Contributors:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

3. Commit changes in PoMiDAQ git:

git commit -a -m "Release version $NEW_VERSION"
git tag -s -f -m "Release $NEW_VERSION" v$NEW_VERSION <gpg password>
git push --tags
git push

4. Create GitHub release in the same format as usual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<NEWS excerpt here>

---
Please check out the [information for users](https://github.com/bothlab/pomidaq#users) for using the
prebuilt binaries and solutions to common issues users may encounter.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

5. Upload binaries generated by GitHub Actions to the new release

6. Do post release version bump in CMakeLists.txt, RELEASE

7. Commit trivial changes:

git commit -a -m "trivial: post release version bump"
git push

8. Announce the new release
